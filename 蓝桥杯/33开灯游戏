题目描述
有9盏灯与9个开关，编号都是1~9。

每个开关能控制若干盏灯，按下一次会改变其控制的灯的状态(亮的变成不亮，不亮变成亮的)。

具体如下：

第一个开关控制第二，第四盏灯；

第二个开关控制第一，第三，第五盏灯；

第三个开关控制第二，第六盏灯；

第四个开关控制第一，第五，第七盏灯；

第五个开关控制第二，第四，第六，第八盏灯；

第六个开关控制第三，第五，第九盏灯；

第七个开关控制第四，第八盏灯；

第八个开关控制第五，第七，第九盏灯；

第九个开关控制第六，第八盏灯。

开始时所有灯都是熄灭的，开关是关闭着的。要求按下若干开关后，使得只有4盏灯亮着。
输入
无
输出
输出所有可能的方案，每行一个方案，每一行有9个字符，从左往右第i个字符表示第i个开关的状态(" 0" 表示关闭，" 1" 表示打开)，按字典序输出。下面的样例输出只是部分方案。 
样例输入
无
样例输出
000001011 
000001110 
000001111 


代码：
public class Main {
	static int ans=0;
	static int[] a,t;
	static int[][] b= {{},{2,4},{1,3,5},{2,6},{1,5,7},{2,4,6,8},{3,5,9},{4,8},{5,7,9},{6,8}};;
	public static void main(String[] args) {
	   a=new int[10];
	   t=new int[10];
	   Arrays.fill(a, 0);
	   Arrays.fill(t, 0);
	   dfs(1);
	}
	static void dfs(int step) {
		if(step==10) {
			if(check()) {
				for(int i=1;i<=9;i++) {
					System.out.print(a[i]);
				}
				System.out.println();
		    }
			return;
		}
		for(int i=0;i<=1;i++) {
			a[step]=i;
			dfs(step+1);
		}
		
	}
	static boolean check() {
		Arrays.fill(t, 0);
		for(int i=1;i<=9;i++) {
			if(a[i]==1) {
				for(int j=0;j<b[i].length;j++) {
					if(t[b[i][j]]==0) {
						t[b[i][j]]=1;
					}else {
						t[b[i][j]]=0;
					}
				}
			}
		}
		int k=0;
		for(int i=1;i<=9;i++) {
			if(t[i]==1) {
				k++;
			}
		}
		if(k==4) {
			return true;
		}
		return false;
	}
}
