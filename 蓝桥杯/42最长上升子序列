描述
一个数的序列ai，当a1 < a2< ... < aS的时候，我们称这个 序列是上升的。对于给定的一个序列(a1,a2, ..., aN)，我们可 以得到一些上升的子序列(ai1,ai2, ..., aiK)，这里1<= i1 < i2 < ... < iK<= N。比如，对于序列(1,7, 3, 5, 9, 4, 8)， 有它的一些上升子序列，如(1, 7), (3, 4, 8)等等。这些子序列中最长的长度是4，比如子序列(1, 3, 5, 8). 

你的任务，就是对于给定的序列，求出最长上升子序列的长度。 

输入
输入有多组数据，每组数据第一行输入序列的长度N (1 <= N <= 1000)。第二行输入序列中的N个整数，这些整数的取值范围都在0到10000。

输出
对应每组数据，输出最长上升子序列的长度。

样例输入1
6
3 2 6 1 4 5

样例输出1
3

代码：
public class Main{
	public static void main(String[] args) {
		Scanner input=new Scanner(System.in);
		int n=input.nextInt();
		int[] a=new int[n];
		int[] dp=new int[n];
		for(int i=0;i<n;i++) {
			a[i]=input.nextInt();
		}
		int ans=0;
		for(int i=0;i<n;i++) {
			dp[i]=1;
			for(int j=0;j<i;j++) {
				if(a[j]<a[i]) {
					dp[i]=Math.max(dp[i], dp[j]+1);
				}
			}
			ans=Math.max(dp[i], ans);
		}
		
		System.out.println(ans);
	}
}

