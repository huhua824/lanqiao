题目描述
为了准备一个学生节，组织者在会场的一片矩形区域（可看做是平面直角坐标
系的第一象限）铺上一些矩形地毯。一共有n  张地毯，编号从1  到n。现在将这些地毯按照
编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。
地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形
地毯边界和四个顶点上的点也算被地毯覆盖。

数据规模和约定
对于  100%的数据，有0≤n≤10,000，0≤a,  b,  g,  k≤100,000。
输入
输入共  n+2  行。 
第一行，一个整数  n，表示总共有n  张地毯。 
接下来的  n  行中，第i+1  行表示编号i  的地毯的信息，包含四个正整数a，b，g，k，每 
两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标（a，b）以及地毯在x 
轴和y  轴方向的长度。 
第  n+2  行包含两个正整数x  和y，表示所求的地面的点的坐标（x，y）。 
输出
输出共  1  行，一个整数，表示所求的地毯的编号；若此处没有被地毯覆盖则输出-1。 
样例输入
3
1 0 2 3
0 2 3 3
2 1 3 3
2 2
样例输出
3

代码：

public class Main {
	public static void main(String[] args) {
		Scanner input=new Scanner(System.in);
		int n=input.nextInt();
		int[] a=new int[100005];
		int[] b=new int[100005];
		int[] g=new int[100005];
		int[] k=new int[100005];
		for(int i=1;i<=n;i++) {
			a[i]=input.nextInt();
			b[i]=input.nextInt();
			g[i]=input.nextInt();
			k[i]=input.nextInt();
		}
		int x=input.nextInt();
		int y=input.nextInt();
		int ans=-1;
		for(int i=1;i<=n;i++) {
			if(a[i]<=x&&b[i]<=y&&a[i]+g[i]>=x&&b[i]+k[i]>=y) {
				ans=i;
			}
		}
		System.out.println(ans);
	}
}
