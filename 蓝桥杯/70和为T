题目描述
从一个大小为n的整数集中选取一些元素，使得它们的和等于给定的值T。每个元素限选一次，不能一个都不选。

数据规模和约定
1< =n< =22
T< =maxlongint
集合中任意元素的和都不超过long的范围

输入
第一行一个正整数n，表示整数集内元素的个数。 
第二行n个整数，用空格隔开。 
第三行一个整数T，表示要达到的和。 
输出
输出有若干行，每行输出一组解，即所选取的数字，按照输入中的顺序排列。 
若有多组解，优先输出不包含第n个整数的；若都包含或都不包含，优先输出不包含第n-1个整数的，依次类推。 
最后一行输出总方案数。 
样例输入
5
-7 -3 -2 5 9
0
样例输出
-3 -2 5
-7 -2 9
2

代码：
import java.util.Scanner;

public class 和为T {
	static int ans=0,sum;
	static int t,n;
	static int a[];
	static int b[];
	public static void main(String[] args) {
		Scanner input=new Scanner(System.in);
		n=input.nextInt();
		a=new int[n];
		b=new int[n];
		for(int i=0;i<n;i++) {
			a[i]=input.nextInt();
		}
		t=input.nextInt();
		dfs(0,n-1,0);
		System.out.println(ans);
	}
	static void dfs(int sum,int step,int k) {
		if(step<0) {
			return;
		}
		dfs(sum,step-1,k);
		sum+=a[step];
		b[k]=a[step];
		if(sum==t) {
			ans++;
			for(int i=k;i>=0;i--) {
				System.out.print(b[i]+" ");
			}
			System.out.println();
		}
		dfs(sum,step-1,k+1);
	}
}
