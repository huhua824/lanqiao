题目描述
任意一个四位数，只要它们各个位上的数字是不全相同的，就有这样的规律：
1)将组成该四位数的四个数字由大到小排列，形成由这四个数字构成的最大的四位数；
2)将组成该四位数的四个数字由小到大排列，形成由这四个数字构成的最小的四位数(如果四个数中含有0，则得到的数不足四位)；
3)求两个数的差，得到一个新的四位数(高位零保留)。
重复以上过程，最后一定会得到的结果是6174。
比如：4312  3087  8352  6174，经过三次变换，得到6174
输入
一个四位整数，输入保证四位数字不全相同 
输出
一个整数，表示这个数字经过多少次变换能得到6174 
样例输入
4312 
样例输出
3

代码：

public class Main{
	static char[] s;
	public static void main(String[] args) {
		Scanner input=new Scanner(System.in);
		String n=input.next();
		int ans=0;
		while(Integer.parseInt(n)!=6174) {
			ans++;
			int min=min(n);
			int max=max(n);
			n=(max-min)+"";
			//System.out.println(n);
		}
		System.out.println(ans);
	}
	static int min(String n) {
		s=n.toCharArray();
		Arrays.sort(s);
		int num=0,j=0;
		if(s[0]==0) {
			j+=1;
		}
		for(int i=j;i<s.length;i++) {
			num=num*10+(s[i]-'0');
		}
		return num;
	}
	static int max(String n) {
		s=n.toCharArray();
		Arrays.sort(s);
		int num=0;
		for(int i=s.length-1;i>=0;i--) {
			num=num*10+(s[i]-'0');
		}
		return num;
	}
}
