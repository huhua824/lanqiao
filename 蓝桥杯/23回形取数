题目描述
回形取数就是沿矩阵的边取数，若当前方向上无数可取或已经取过，则左转90度。一开始位于矩阵左上角，方向向下。
输入
输入第一行是两个不超过200的正整数m,  n，表示矩阵的行和列。接下来m行每行n个整数，表示这个矩阵。
输出
输出只有一行，共mn个数，为输入矩阵回形取数得到的结果。数之间用一个空格分隔，行末不要有多余的空格。
样例输入
3  3 

1  2  3 

4  5  6 

7  8  9 
样例输出
1 4 7 8 9 6 3 2 5

代码；
public class Main{
	public static void main(String[] args) {
		Scanner input=new Scanner(System.in);
		int m=input.nextInt();
		int n=input.nextInt();
		int[][] a=new int[205][205];
		int[][] b=new int[205][205];
		for(int i=1;i<=m;i++) {
			for(int j=1;j<=n;j++) {
				a[i][j]=input.nextInt();
				b[i][j]=1;
			}
		}
/*		int k=0,i=0,j=1;
		while(k<n*m) {
			while(i+1<=m&&a[i+1][j]!=-1) {  //向下取数
				if(k!=n*m-1) {
					System.out.print(a[++i][j]+" ");
				}else {
					System.out.println(a[++i][j]);
				}
				a[i][j]=-1;
				k++;
			}
			while(j+1<=n&&a[i][j+1]!=-1) {  //向右取数
				System.out.print(a[i][++j]+" ");
				a[i][j]=-1;
				k++;
			}
			while(i-1>0&&a[i-1][j]!=-1) {   //向上取数
				System.out.print(a[--i][j]+" ");
				a[i][j]=-1;
				k++;
			}
			while(j-1>0&&a[i][j-1]!=-1) {    //向左取数
				System.out.print(a[i][--j]+" ");
				a[i][j]=-1;
				k++;
			}
		}*/
		
		int[] dx= {1,0,-1,0};//上下移动
		int[] dy= {0,1,0,-1};//左右移动
		int k=0,i=1,j=1,d=0,g=0,h=0;
		while(k<n*m) {
			if(b[i][j]==1) {
				if(k!=n*m-1) {
					System.out.print(a[i][j]+" ");
				}else {
					System.out.print(a[i][j]);
				}
				b[i][j]=0;
				g=i;
				h=j;
				k++;
			}else {
				d=(d+1)%4;
			}
				i=g+dx[d];
				j=h+dy[d];
		}
	}
}
