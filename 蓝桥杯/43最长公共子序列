描述
ben和mei在做一个项目。现在他们遇到了一个难题，需要你的帮助。问题可以抽象为，给定两个整型数串，求它们的最长公共子序列。最长公共子序列的定义是，一个数列 S ，如果分别是两个或多个已知数列的子序列，且是所有符合此条件序列中最长的，则 S 称为已知序列的最长公共子序列。

输入
输入包含多组测试数据，每组数据首先包含一个N和一个M,分别表示两个整型串的长度，接下来是两行数据，分别有N个和M个整数(0<N<1000, 0<M<1000)。

输出
对每组数据，请输出它们最长公共子序列的长度。

样例输入1
7 8
1 3 4 6 7 5 4
1 6 3 4 8 7 5 6

样例输出1
5

代码：
public class Main{
	public static void main(String[] args) {
		Scanner input=new Scanner(System.in);
		int n=input.nextInt();
		int m=input.nextInt();
		int[] a=new int[n+1];
		int[] b=new int[m+1];
		int[][] dp=new int[n+1][m+1];
		for(int i=1;i<=n;i++) {
			a[i]=input.nextInt();
		}
		for(int i=1;i<=m;i++) {
			b[i]=input.nextInt();
		}
		
		int ans=0;
		for(int i=1;i<=n;i++) {
			for(int j=1;j<=m;j++) {
				if (a[i] == b[j]) {
					dp[i][j] = dp[i - 1][j - 1] + 1;
				}else {
					dp[i][j] =Math.max(dp[i - 1][j], dp[i][j - 1]);
				}
			}
		}
		
		System.out.println(dp[n][m]);
	}
}

